{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/HomeComponent.js","components/AboutComponent.js","components/MenuComponent.js","components/ContactComponent.js","components/DishdetailComponent.js","components/FavoriteComponent.js","components/HeaderComponent.js","components/FooterComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/favorites.js","redux/auth.js","redux/forms.js","App.js","redux/configureStore.js","registerServiceWorker.js","index.js"],"names":["Loading","className","baseUrl","RenderCard","item","isLoading","errMess","in","transformProps","exitTransform","Card","CardImg","src","image","alt","name","CardBody","CardTitle","designation","CardSubtitle","CardText","description","Home","props","dish","dishesLoading","dishesErrMess","promotion","promosLoading","promosErrMess","leader","leaderLoading","leaderErrMess","RenderLeader","Media","tag","left","middle","object","body","heading","LeaderList","leaders","map","key","_id","list","About","Breadcrumb","BreadcrumbItem","to","active","CardHeader","title","RenderMenuItem","width","CardImgOverlay","Menu","menu","dishes","required","val","length","maxLength","len","minLength","isNumber","isNaN","Number","validEmail","test","Contact","handleSubmit","bind","values","console","log","JSON","stringify","this","postFeedback","resetFeedbackForm","href","role","model","onSubmit","Row","Label","htmlFor","md","Col","text","id","placeholder","validators","show","messages","size","offset","check","checkbox","select","textarea","rows","Button","type","color","Component","RenderDish","favorite","postFavorite","top","outline","onClick","RenderComments","comments","postComment","dishId","comment","rating","author","firstname","lastname","Intl","DateTimeFormat","year","month","day","format","Date","parse","updatedAt","CommentForm","toggleModal","state","isNavOpen","isModalOpen","setState","Modal","isOpen","toggle","ModalHeader","ModalBody","DishDetail","deleteFavorite","Favorites","favorites","Header","toggleNav","handleLogin","handleLogout","event","loginUser","username","value","password","preventDefault","logoutUser","Fragment","Navbar","dark","expand","NavbarToggler","NavbarBrand","height","Collapse","navbar","Nav","NavItem","auth","isAuthenticated","user","isFetching","Jumbotron","Form","FormGroup","Input","innerRef","input","remember","Footer","dishesFailed","errmess","payload","addDishes","commentsFailed","addComments","promosFailed","addPromos","promos","leadersLoading","leadersFailed","addLeaders","fetchFavorites","dispatch","favoritesLoading","bearer","localStorage","getItem","fetch","headers","then","response","ok","error","Error","status","statusText","message","json","addFavorites","catch","favoritesFailed","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","PrivateRoute","component","rest","render","pathname","from","location","TransitionGroup","CSSTransition","classNames","timeout","path","filter","featured","promotions","promo","exact","match","params","commentsErrMess","some","withRouter","connect","newComment","method","credentials","addComment","alert","actions","reset","feedback","creds","requestLogin","Success","setItem","token","receiveLogin","removeItem","Dishes","action","Comments","concat","Promotions","Leaders","Auth","InitialFeedback","telnum","email","agree","contactType","store","createStore","combineReducers","createForms","applyMiddleware","thunk","logger","App","isLocalhost","Boolean","window","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","document","getElementById","URL","process","origin","addEventListener","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.df30bec8.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Loading = () => {\r\n    return(\r\n        <div className=\"col-12\">\r\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n            <p>Loading . . .</p>\r\n        </div>\r\n    );\r\n};","export const baseUrl = 'http://13.229.242.220/localhost:5000/';","import React from 'react';\r\nimport { Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle } from 'reactstrap';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform } from 'react-animation-components';\r\n\r\nfunction RenderCard({item, isLoading, errMess}) {\r\n    if (isLoading) {\r\n        return(\r\n            <Loading />\r\n        );\r\n    }\r\n    else if (errMess) {\r\n        return(\r\n            <h4>{errMess}</h4>\r\n        );\r\n    }\r\n    else\r\n        return(\r\n            <FadeTransform in \r\n                transformProps={{\r\n                    exitTransform: 'scale(0.5) translateY(-50%)'\r\n                }}>\r\n                <Card>\r\n                    <CardImg src={baseUrl + item.image} alt={item.name} />\r\n                    <CardBody>\r\n                        <CardTitle>{item.name}</CardTitle>\r\n                        {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null}\r\n                        <CardText>{item.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            </FadeTransform>\r\n        );\r\n}\r\n\r\nfunction Home(props) {\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row align-items-start\">\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.dish} \r\n                        isLoading={props.dishesLoading}\r\n                        errMess={props.dishesErrMess} />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.promotion} \r\n                        isLoading={props.promosLoading}\r\n                        errMess={props.promosErrMess} />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.leader} \r\n                        isLoading={props.leaderLoading} \r\n                        errMess={props.leaderErrMess} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { Fade, Stagger } from 'react-animation-components';\r\n\r\nfunction RenderLeader({leader}) {\r\n    return(\r\n        <Media tag=\"li\">\r\n            <Media left middle>\r\n                <Media object src={baseUrl + leader.image} alt={leader.name} />\r\n            </Media>\r\n            <Media body className=\"ml-5\">\r\n                <Media heading>{leader.name}</Media>\r\n                <p>{leader.designation}</p>\r\n                <p>{leader.description}</p>\r\n            </Media>\r\n        </Media>\r\n    );\r\n\r\n}\r\n\r\nfunction LeaderList(props) {\r\n\r\n    const leaders = props.leaders.leaders.map((leader) => {\r\n        return (\r\n            <Fade in key={leader._id}>\r\n                <div className=\"col-12 mt-2\">\r\n                        <RenderLeader leader={leader} />\r\n                </div>\r\n            </Fade>\r\n        );\r\n    });\r\n\r\n    if (props.leaders.isLoading) {\r\n        return(\r\n                <Loading />\r\n        );\r\n    }\r\n    else if (props.leaders.errMess) {\r\n        return(\r\n            <div className=\"col-12\"> \r\n                <h4>{props.leaders.errMess}</h4>\r\n            </div>\r\n        );\r\n    }\r\n    else {\r\n        return (\r\n            <Media list>\r\n                <Stagger in>\r\n                    {leaders}\r\n                </Stagger>\r\n            </Media>\r\n        );\r\n    }\r\n}\r\n\r\nfunction About(props) {\r\n\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>About Us</h3>\r\n                    <hr />\r\n                </div>                \r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12 col-md-6\">\r\n                    <h2>Our History</h2>\r\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\r\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\r\n                </div>\r\n                <div className=\"col-12 col-md-5\">\r\n                    <Card>\r\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\r\n                        <CardBody>\r\n                            <dl className=\"row p-1\">\r\n                                <dt className=\"col-6\">Started</dt>\r\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\r\n                                <dt className=\"col-6\">Major Stake Holder</dt>\r\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\r\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                                <dd className=\"col-6\">$1,250,375</dd>\r\n                                <dt className=\"col-6\">Employees</dt>\r\n                                <dd className=\"col-6\">40</dd>\r\n                            </dl>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Card>\r\n                        <CardBody className=\"bg-faded\">\r\n                            <blockquote className=\"blockquote\">\r\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\r\n                                    I'm not hungry enough to eat six.</p>\r\n                                <footer className=\"blockquote-footer\">Yogi Berra,\r\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\r\n                                    P. Pepe, Diversion Books, 2014</cite>\r\n                                </footer>\r\n                            </blockquote>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                    <h2>Corporate Leadership</h2>\r\n                </div>\r\n                <LeaderList leaders={props.leaders} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;    ","import React from 'react';\r\nimport { Card, CardImg, CardImgOverlay, CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\n    function RenderMenuItem({ dish }) {\r\n        return(\r\n            <Card>\r\n                <Link to={`/menu/${dish._id}`} >\r\n                    <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\r\n                    <CardImgOverlay>\r\n                        <CardTitle>{dish.name}</CardTitle>\r\n                    </CardImgOverlay>\r\n                </Link>\r\n            </Card>\r\n        );\r\n    }\r\n\r\n    const Menu = (props) => {\r\n\r\n        const menu = props.dishes.dishes.map((dish) => {\r\n            return (\r\n                <div key={dish._id} className=\"col-12 col-md-5 m-1\">\r\n                    <RenderMenuItem dish={dish} />\r\n                </div>\r\n            );\r\n        });\r\n\r\n        if (props.dishes.isLoading) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if (props.dishes.errMess) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <h4>{props.dishes.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else\r\n            return (\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Breadcrumb>\r\n                            <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\r\n                            <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n                        </Breadcrumb>\r\n                        <div className=\"col-12\">\r\n                            <h3>Menu</h3>\r\n                            <hr />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        {menu}\r\n                    </div>\r\n                </div>\r\n            );\r\n    }\r\n\r\nexport default Menu;","import React, { Component } from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Button, Label, Col, Row } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, Form, Errors } from 'react-redux-form';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => (val) && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        console.log(\"Current State is: \" + JSON.stringify(values));\r\n        this.props.postFeedback(values);\r\n        this.props.resetFeedbackForm();\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Contact Us</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                    <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                            <h5>Our Address</h5>\r\n                            <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                            </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Send us Your Feedback</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                        <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".firstname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                        placeholder=\"Last Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".lastname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                        placeholder=\"Tel. Number\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15), isNumber\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 numbers',\r\n                                            maxLength: 'Must be 15 numbers or less',\r\n                                            isNumber: 'Must be a number'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, validEmail\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            validEmail: 'Invalid Email Address'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 6, offset: 2}}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\r\n                                                className=\"form-check-input\"\r\n                                                 /> {' '}\r\n                                                <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{size: 3, offset: 1}}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\"\r\n                                        className=\"form-control\">\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                        rows=\"12\"\r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size:10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                    Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Contact;","import React, { Component } from 'react';\r\nimport { Card, CardImg, CardImgOverlay, CardText, CardBody,\r\n    CardTitle, Breadcrumb, BreadcrumbItem, Label,\r\n    Modal, ModalHeader, ModalBody, Button, Row, Col } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, LocalForm } from 'react-redux-form';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\n    function RenderDish({dish, favorite, postFavorite}) {\r\n            return(\r\n                <div className=\"col-12 col-md-5 m-1\">\r\n                    <FadeTransform in \r\n                        transformProps={{\r\n                            exitTransform: 'scale(0.5) translateY(-50%)'\r\n                        }}>\r\n                        <Card>\r\n                            <CardImg top src={baseUrl + dish.image} alt={dish.name} />\r\n                            <CardImgOverlay>\r\n                                <Button outline color=\"primary\" onClick={() => favorite ? console.log('Already favorite') : postFavorite(dish._id)}>\r\n                                    {favorite ?\r\n                                        <span className=\"fa fa-heart\"></span>\r\n                                        : \r\n                                        <span className=\"fa fa-heart-o\"></span>\r\n                                    }\r\n                                </Button>\r\n                            </CardImgOverlay>\r\n                            <CardBody>\r\n                                <CardTitle>{dish.name}</CardTitle>\r\n                                <CardText>{dish.description}</CardText>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </FadeTransform>\r\n                </div>\r\n            );\r\n\r\n    }\r\n\r\n    function RenderComments({comments, postComment, dishId}) {\r\n        if (comments != null)\r\n            return(\r\n                <div className=\"col-12 col-md-5 m-1\">\r\n                    <h4>Comments</h4>\r\n                    <ul className=\"list-unstyled\">\r\n                        <Stagger in>\r\n                            {comments.map((comment) => {\r\n                                return (\r\n                                    <Fade in key={comment._id}>\r\n                                        <li>\r\n                                        <p>{comment.comment}</p>\r\n                                        <p>{comment.rating} stars</p>\r\n                                        <p>-- {comment.author.firstname} {comment.author.lastname} , {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day:'2-digit'}).format(new Date(Date.parse(comment.updatedAt)))}</p>\r\n                                        </li>\r\n                                    </Fade>\r\n                                );\r\n                            })}\r\n                        </Stagger>\r\n                    </ul>\r\n                    <CommentForm dishId={dishId} postComment={postComment} />\r\n                </div>\r\n            );\r\n        else\r\n            return(\r\n                <div></div>\r\n            );\r\n    }\r\n\r\n    class CommentForm extends Component {\r\n\r\n        constructor(props) {\r\n            super(props);\r\n    \r\n            this.toggleModal = this.toggleModal.bind(this);\r\n            this.handleSubmit = this.handleSubmit.bind(this);\r\n            \r\n            this.state = {\r\n              isNavOpen: false,\r\n              isModalOpen: false\r\n            };\r\n        }\r\n    \r\n        toggleModal() {\r\n            this.setState({\r\n              isModalOpen: !this.state.isModalOpen\r\n            });\r\n        }\r\n    \r\n        handleSubmit(values) {\r\n            this.toggleModal();\r\n            this.props.postComment(this.props.dishId, values.rating, values.comment);\r\n        }\r\n    \r\n        render() {\r\n            return(\r\n            <div>\r\n                <Button outline onClick={this.toggleModal}><span className=\"fa fa-pencil fa-lg\"></span> Submit Comment</Button>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n                <ModalBody>\r\n                    <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                        <Row className=\"form-group\">\r\n                            <Col>\r\n                            <Label htmlFor=\"rating\">Rating</Label>\r\n                            <Control.select model=\".rating\" id=\"rating\" className=\"form-control\">\r\n                                <option>1</option>\r\n                                <option>2</option>\r\n                                <option>3</option>\r\n                                <option>4</option>\r\n                                <option>5</option>\r\n                            </Control.select>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                            <Col>\r\n                            <Label htmlFor=\"comment\">Comment</Label>\r\n                            <Control.textarea model=\".comment\" id=\"comment\"\r\n                                        rows=\"6\" className=\"form-control\" />\r\n                            </Col>\r\n                        </Row>\r\n                        <Button type=\"submit\" className=\"bg-primary\">\r\n                            Submit\r\n                        </Button>\r\n                    </LocalForm>\r\n                </ModalBody>\r\n               </Modal>\r\n            </div>\r\n            );\r\n        }\r\n    \r\n    }\r\n\r\n    const DishDetail = (props) => {\r\n        if (props.isLoading) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if (props.errMess) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <h4>{props.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if (props.dish != null)        \r\n            return (\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Breadcrumb>\r\n                            <BreadcrumbItem><Link to='/menu'>Menu</Link></BreadcrumbItem>\r\n                            <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                        </Breadcrumb>\r\n                        <div className=\"col-12\">\r\n                            <h3>{props.dish.name}</h3>\r\n                            <hr />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <RenderDish dish={props.dish} favorite={props.favorite} postFavorite={props.postFavorite} />\r\n                        <RenderComments comments={props.comments}\r\n                            postComment={props.postComment}\r\n                            dishId={props.dish._id} />\r\n                    </div>\r\n                </div>\r\n            );\r\n        else\r\n            return(\r\n                <div></div>\r\n            );\r\n    }\r\n\r\nexport default DishDetail;","import React, { Component } from 'react';\r\nimport { Media, Breadcrumb, BreadcrumbItem, Button } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { Loading } from './LoadingComponent';\r\n\r\nfunction RenderMenuItem({ dish, deleteFavorite }) {\r\n    return(\r\n        <Media tag=\"li\">\r\n            <Media left middle>\r\n                <Media object src={baseUrl + dish._id.image} alt={dish._id.name} />\r\n            </Media>\r\n            <Media body className=\"ml-5\">\r\n                <Media heading>{dish._id.name}</Media>\r\n                <p>{dish._id.description}</p>\r\n                <Button outline color=\"danger\" onClick={() => deleteFavorite(dish._id._id)}>\r\n                    <span className=\"fa fa-times\"></span>\r\n                </Button>\r\n            </Media>\r\n        </Media>\r\n    );\r\n}\r\n\r\nconst Favorites = (props) => {\r\n\r\n    if (props.favorites.isLoading) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.favorites.errMess) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <h4>{props.favorites.errMess}</h4>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    else if (props.favorites.favorites.dishes.length > 0) {\r\n\r\n        const favorites = props.favorites.favorites.dishes.map((dish) => {\r\n            return (\r\n                <div key={dish._id} className=\"col-12 mt-5\">\r\n                    <RenderMenuItem dish={dish} deleteFavorite={props.deleteFavorite} />\r\n                </div>\r\n            );\r\n        });\r\n\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>My Favorites</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>My Favorites</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <Media list>\r\n                        {favorites}\r\n                    </Media>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <h4>You have no favorites</h4>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Favorites;","import React, { Component } from 'react';\r\nimport { Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Jumbotron,\r\n    Button, Modal, ModalHeader, ModalBody,\r\n    Form, FormGroup, Input, Label } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass Header extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isNavOpen: false,\r\n            isModalOpen: false\r\n        };\r\n        this.toggleNav = this.toggleNav.bind(this);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n        this.handleLogout = this.handleLogout.bind(this);\r\n    }\r\n\r\n    toggleNav() {\r\n        this.setState({\r\n            isNavOpen: !this.state.isNavOpen\r\n        });\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    handleLogin(event) {\r\n        this.toggleModal();\r\n        this.props.loginUser({username: this.username.value, password: this.password.value});\r\n        event.preventDefault();\r\n\r\n    }\r\n\r\n    handleLogout() {\r\n        this.props.logoutUser();\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <React.Fragment>\r\n                <Navbar dark expand=\"md\">\r\n                    <div className=\"container\">\r\n                        <NavbarToggler onClick={this.toggleNav} />\r\n                        <NavbarBrand className=\"mr-auto\" href=\"/\">\r\n                            <img src=\"assets/images/logo.png\" height=\"30\" width=\"41\"\r\n                                alt=\"Ristorante Con Fusion\" />\r\n                        </NavbarBrand>\r\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                            <Nav navbar>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/home\">\r\n                                        <span className=\"fa fa-home fa-lg\"></span> Home\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/aboutus\">\r\n                                        <span className=\"fa fa-info fa-lg\"></span> About Us\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/menu\">\r\n                                        <span className=\"fa fa-list fa-lg\"></span> Menu\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/favorites\">\r\n                                        <span className=\"fa fa-heart fa-lg\"></span> My Favorites\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/contactus\">\r\n                                        <span className=\"fa fa-address-card fa-lg\"></span> Contact Us\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                            <Nav className=\"ml-auto\" navbar>\r\n                                <NavItem>\r\n                                    { !this.props.auth.isAuthenticated ?\r\n                                        <Button outline onClick={this.toggleModal}>\r\n                                            <span className=\"fa fa-sign-in fa-lg\"></span> Login\r\n                                            {this.props.auth.isFetching ?\r\n                                                <span className=\"fa fa-spinner fa-pulse fa-fw\"></span>\r\n                                                : null\r\n                                            }\r\n                                        </Button>\r\n                                        :\r\n                                        <div>\r\n                                        <div className=\"navbar-text mr-3\">{this.props.auth.user.username}</div>\r\n                                        <Button outline onClick={this.handleLogout}>\r\n                                            <span className=\"fa fa-sign-out fa-lg\"></span> Logout\r\n                                            {this.props.auth.isFetching ?\r\n                                                <span className=\"fa fa-spinner fa-pulse fa-fw\"></span>\r\n                                                : null\r\n                                            }\r\n                                        </Button>\r\n                                        </div>\r\n                                    }\r\n\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </Collapse>\r\n                    </div>\r\n                </Navbar>\r\n                <Jumbotron>\r\n                    <div className=\"container\">\r\n                        <div className=\"row row-header\">\r\n                            <div className=\"col-12 col-sm-6\">\r\n                                <h1>Ristorante Con Fusion</h1>\r\n                                <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Jumbotron>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n                    <ModalBody>\r\n                        <Form onSubmit={this.handleLogin}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"username\">Username</Label>\r\n                                <Input type=\"text\" id=\"username\" name=\"username\"\r\n                                    innerRef={(input) => this.username = input} />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"password\">Password</Label>\r\n                                <Input type=\"password\" id=\"password\" name=\"password\"\r\n                                    innerRef={(input) => this.password = input}  />\r\n                            </FormGroup>\r\n                            <FormGroup check>\r\n                                <Label check>\r\n                                    <Input type=\"checkbox\" name=\"remember\"\r\n                                    innerRef={(input) => this.remember = input}  />\r\n                                    Remember me\r\n                                </Label>\r\n                            </FormGroup>\r\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Footer(props) {\r\n    return(\r\n        <div className=\"footer\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">             \r\n                    <div className=\"col-4 offset-1 col-sm-2\">\r\n                        <h5>Links</h5>\r\n                        <ul className=\"list-unstyled\">\r\n                            <li><Link to=\"/home\">Home</Link></li>\r\n                            <li><Link to=\"/aboutus\">About Us</Link></li>\r\n                            <li><Link to=\"/menu\">Menu</Link></li>\r\n                            <li><Link to=\"/contactus\">Contact Us</Link></li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"col-7 col-sm-5\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                        121, Clear Water Bay Road<br />\r\n                        Clear Water Bay, Kowloon<br />\r\n                        HONG KONG<br />\r\n                        <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\r\n                        <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\r\n                        <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\r\n                            confusion@food.net</a>\r\n                        </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 align-self-center\">\r\n                        <div className=\"text-center\">\r\n                            <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                            <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                            <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                            <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                            <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                            <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row justify-content-center\">             \r\n                    <div className=\"col-auto\">\r\n                        <p>© Copyright 2018 Ristorante Con Fusion</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Footer;","import * as ActionTypes from './ActionTypes';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nexport const addComment = (comment) => ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    payload: comment\r\n});\r\n\r\nexport const postComment = (dishId, rating, comment) => (dispatch) => {\r\n\r\n    const newComment = {\r\n        dish: dishId,\r\n        rating: rating,\r\n        comment: comment\r\n    }\r\n    console.log('Comment ', newComment);\r\n\r\n    const bearer = 'Bearer ' + localStorage.getItem('token');\r\n\r\n    return fetch(baseUrl + 'comments', {\r\n        method: 'POST',\r\n        body: JSON.stringify(newComment),\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': bearer\r\n        },\r\n        credentials: 'same-origin'\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n            return response;\r\n        }\r\n        else {\r\n            var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n    },\r\n    error => {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n    })\r\n    .then(response => response.json())\r\n    .then(response => dispatch(addComment(response)))\r\n    .catch(error => { console.log('Post comments ', error.message);\r\n        alert('Your comment could not be posted\\nError: '+ error.message); })\r\n}\r\n\r\nexport const fetchDishes = () => (dispatch) => {\r\n    dispatch(dishesLoading(true));\r\n\r\n    return fetch(baseUrl + 'dishes')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => { return response.json() })\r\n        .then(dishes => dispatch(addDishes(dishes)))\r\n        .catch(error => dispatch(dishesFailed(error.message)));\r\n}\r\n\r\nexport const dishesLoading = () => ({\r\n    type: ActionTypes.DISHES_LOADING\r\n});\r\n\r\nexport const dishesFailed = (errmess) => ({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addDishes = (dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes\r\n});\r\n\r\nexport const fetchComments = () => (dispatch) => {\r\n    return fetch(baseUrl + 'comments')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(comments => dispatch(addComments(comments)))\r\n        .catch(error => dispatch(commentsFailed(error.message)));\r\n}\r\n\r\nexport const commentsFailed = (errmess) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n});\r\n\r\nexport const fetchPromos = () => (dispatch) => {\r\n    dispatch(promosLoading(true));\r\n\r\n    return fetch(baseUrl + 'promotions')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(promos => dispatch(addPromos(promos)))\r\n        .catch(error => dispatch(promosFailed(error.message)));\r\n}\r\n\r\nexport const promosLoading = () => ({\r\n    type: ActionTypes.PROMOS_LOADING\r\n});\r\n\r\nexport const promosFailed = (errmess) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n});\r\n\r\nexport const fetchLeaders = () => (dispatch) => {\r\n    \r\n    dispatch(leadersLoading());\r\n\r\n    return fetch(baseUrl + 'leaders')\r\n    .then(response => {\r\n        if (response.ok) {\r\n            return response;\r\n        } else {\r\n            var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n        },\r\n        error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n    .then(response => response.json())\r\n    .then(leaders => dispatch(addLeaders(leaders)))\r\n    .catch(error => dispatch(leadersFailed(error.message)));\r\n}\r\n\r\nexport const leadersLoading = () => ({\r\n    type: ActionTypes.LEADERS_LOADING\r\n});\r\n\r\nexport const leadersFailed = (errmess) => ({\r\n    type: ActionTypes.LEADERS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addLeaders = (leaders) => ({\r\n    type: ActionTypes.ADD_LEADERS,\r\n    payload: leaders\r\n});\r\n\r\nexport const postFeedback = (feedback) => (dispatch) => {\r\n        \r\n    return fetch(baseUrl + 'feedback', {\r\n        method: \"POST\",\r\n        body: JSON.stringify(feedback),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"same-origin\"\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            throw error;\r\n      })\r\n    .then(response => response.json())\r\n    .then(response => { console.log('Feedback', response); alert('Thank you for your feedback!\\n'+JSON.stringify(response)); })\r\n    .catch(error =>  { console.log('Feedback', error.message); alert('Your feedback could not be posted\\nError: '+error.message); });\r\n};\r\n\r\nexport const requestLogin = (creds) => {\r\n    return {\r\n        type: ActionTypes.LOGIN_REQUEST,\r\n        creds\r\n    }\r\n}\r\n  \r\nexport const receiveLogin = (response) => {\r\n    return {\r\n        type: ActionTypes.LOGIN_SUCCESS,\r\n        token: response.token\r\n    }\r\n}\r\n  \r\nexport const loginError = (message) => {\r\n    return {\r\n        type: ActionTypes.LOGIN_FAILURE,\r\n        message\r\n    }\r\n}\r\n\r\nexport const loginUser = (creds) => (dispatch) => {\r\n    // We dispatch requestLogin to kickoff the call to the API\r\n    dispatch(requestLogin(creds))\r\n\r\n    return fetch(baseUrl + 'users/login', {\r\n        method: 'POST',\r\n        headers: { \r\n            'Content-Type':'application/json' \r\n        },\r\n        body: JSON.stringify(creds)\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n            return response;\r\n        } else {\r\n            var error = new Error('Error 1 ' + response.status + ': ' + response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n        },\r\n        error => {\r\n            throw error;\r\n        })\r\n        .then(response => { return response.json() })\r\n    .then(response => {\r\n        if (response.Success) {\r\n            // If login was successful, set the token in local storage\r\n            localStorage.setItem('token', response.token);\r\n            localStorage.setItem('creds', JSON.stringify(creds));\r\n            // Dispatch the success action\r\n            dispatch(fetchFavorites());\r\n            dispatch(receiveLogin(response));\r\n        }\r\n        else {\r\n            var error = new Error('Error 2 ' + response.status);\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n    })\r\n    .catch(error => dispatch(loginError(error.message)))\r\n};\r\n\r\nexport const requestLogout = () => {\r\n    return {\r\n      type: ActionTypes.LOGOUT_REQUEST\r\n    }\r\n}\r\n  \r\nexport const receiveLogout = () => {\r\n    return {\r\n      type: ActionTypes.LOGOUT_SUCCESS\r\n    }\r\n}\r\n\r\n// Logs the user out\r\nexport const logoutUser = () => (dispatch) => {\r\n    dispatch(requestLogout())\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('creds');\r\n    dispatch(favoritesFailed(\"Error 401: Unauthorized\"));\r\n    dispatch(receiveLogout())\r\n}\r\n\r\nexport const postFavorite = (dishId) => (dispatch) => {\r\n\r\n    const bearer = 'Bearer ' + localStorage.getItem('token');\r\n\r\n    return fetch(baseUrl + 'favorites/' + dishId, {\r\n        method: \"POST\",\r\n        body: JSON.stringify({\"_id\": dishId}),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          'Authorization': bearer\r\n        },\r\n        credentials: \"same-origin\"\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            throw error;\r\n      })\r\n    .then(response => response.json())\r\n    .then(favorites => { console.log('Favorite Added', favorites); dispatch(addFavorites(favorites)); })\r\n    .catch(error => dispatch(favoritesFailed(error.message)));\r\n}\r\n\r\nexport const deleteFavorite = (dishId) => (dispatch) => {\r\n\r\n    const bearer = 'Bearer ' + localStorage.getItem('token');\r\n\r\n    return fetch(baseUrl + 'favorites/' + dishId, {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          'Authorization': bearer\r\n        },\r\n        credentials: \"same-origin\"\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            throw error;\r\n      })\r\n    .then(response => response.json())\r\n    .then(favorites => { console.log('Favorite Deleted', favorites); dispatch(addFavorites(favorites)); })\r\n    .catch(error => dispatch(favoritesFailed(error.message)));\r\n};\r\n\r\nexport const fetchFavorites = () => (dispatch) => {\r\n    dispatch(favoritesLoading(true));\r\n\r\n    const bearer = 'Bearer ' + localStorage.getItem('token');\r\n\r\n    return fetch(baseUrl + 'favorites', {\r\n        headers: {\r\n            'Authorization': bearer\r\n        },\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n            return response;\r\n        }\r\n        else {\r\n            var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n    },\r\n    error => {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n    })\r\n    .then(response => response.json())\r\n    .then(favorites => dispatch(addFavorites(favorites)))\r\n    .catch(error => dispatch(favoritesFailed(error.message)));\r\n}\r\n\r\nexport const favoritesLoading = () => ({\r\n    type: ActionTypes.FAVORITES_LOADING\r\n});\r\n\r\nexport const favoritesFailed = (errmess) => ({\r\n    type: ActionTypes.FAVORITES_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addFavorites = (favorites) => ({\r\n    type: ActionTypes.ADD_FAVORITES,\r\n    payload: favorites\r\n});","export const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const DISHES_LOADING = 'DISHES_LOADING';\r\nexport const DISHES_FAILED = 'DISHES_FAILED';\r\nexport const ADD_DISHES = 'ADD_DISHES';\r\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\r\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\r\nexport const ADD_PROMOS = 'ADD_PROMOS';\r\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\r\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\r\nexport const ADD_LEADERS = 'ADD_LEADERS';\r\nexport const LEADERS_FAILED = 'LEADERS_FAILED';\r\nexport const LOGIN_REQUEST = 'LOGIN_REQUEST';\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAILURE = 'LOGIN_FAILURE';\r\nexport const LOGOUT_REQUEST = 'LOGOUT_REQUEST';\r\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS';\r\nexport const LOGOUT_FAILURE = 'LOGOUT_FAILURE';\r\nexport const FAVORITES_LOADING = 'FAVORITES_LOADING';\r\nexport const FAVORITES_FAILED = 'FAVORITES_FAILED';\r\nexport const ADD_FAVORITES = 'ADD_FAVORITES';","import React, { Component } from 'react';\r\nimport Home from './HomeComponent';\r\nimport About from './AboutComponent';\r\nimport Menu from './MenuComponent';\r\nimport Contact from './ContactComponent';\r\nimport DishDetail from './DishdetailComponent';\r\nimport Favorites from './FavoriteComponent';\r\nimport Header from './HeaderComponent';\r\nimport Footer from './FooterComponent';\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { postComment, postFeedback, fetchDishes, fetchComments, fetchPromos, fetchLeaders, loginUser, logoutUser, fetchFavorites, postFavorite, deleteFavorite } from '../redux/ActionCreators';\r\nimport { actions } from 'react-redux-form';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n      dishes: state.dishes,\r\n      comments: state.comments,\r\n      promotions: state.promotions,\r\n      leaders: state.leaders,\r\n      favorites: state.favorites,\r\n      auth: state.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  postComment: (dishId, rating, comment) => dispatch(postComment(dishId, rating, comment)),\r\n  fetchDishes: () => {dispatch(fetchDishes())},\r\n  resetFeedbackForm: () => { dispatch(actions.reset('feedback'))},\r\n  fetchComments: () => {dispatch(fetchComments())},\r\n  fetchPromos: () => {dispatch(fetchPromos())},\r\n  fetchLeaders: () => dispatch(fetchLeaders()),\r\n  postFeedback: (feedback) => dispatch(postFeedback(feedback)),\r\n  loginUser: (creds) => dispatch(loginUser(creds)),\r\n  logoutUser: () => dispatch(logoutUser()),\r\n  fetchFavorites: () => dispatch(fetchFavorites()),\r\n  postFavorite: (dishId) => dispatch(postFavorite(dishId)),\r\n  deleteFavorite: (dishId) => dispatch(deleteFavorite(dishId))\r\n});\r\n\r\nclass Main extends Component {\r\n\r\n    \r\n\r\n  componentDidMount() {\r\n    this.props.fetchDishes();\r\n    this.props.fetchComments();\r\n    this.props.fetchPromos();\r\n    this.props.fetchLeaders();\r\n    this.props.fetchFavorites();\r\n  }\r\n\r\n  render() {\r\n\r\n    const HomePage = () => {\r\n      return(\r\n        <Home dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\r\n          dishesLoading={this.props.dishes.isLoading}\r\n          dishesErrMess={this.props.dishes.errMess}\r\n          promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\r\n          promosLoading={this.props.promotions.isLoading}\r\n          promosErrMess={this.props.promotions.errMess}\r\n          leader={this.props.leaders.leaders.filter((leader) => leader.featured)[0]}\r\n          leaderLoading={this.props.leaders.isLoading}\r\n          leaderErrMess={this.props.leaders.errMess}\r\n        />\r\n      );\r\n    }\r\n\r\n    const DishWithId = ({match}) => {\r\n        return (\r\n            (this.props.auth.isAuthenticated && this.props.favorites.favorites != null )\r\n        ?\r\n        <DishDetail dish={this.props.dishes.dishes.filter((dish) => dish._id === match.params.dishId)[0]}\r\n          isLoading={this.props.dishes.isLoading}\r\n          errMess={this.props.dishes.errMess}\r\n          comments={this.props.comments.comments.filter((comment) => comment.dish === match.params.dishId)}\r\n          commentsErrMess={this.props.comments.errMess}\r\n          postComment={this.props.postComment}\r\n          favorite={this.props.favorites.favorites.dishes.some((dish) => dish._id === match.params.dishId)}\r\n          postFavorite={this.props.postFavorite}\r\n          />\r\n        :\r\n        <DishDetail dish={this.props.dishes.dishes.filter((dish) => dish._id === match.params.dishId)[0]}\r\n          isLoading={this.props.dishes.isLoading}\r\n          errMess={this.props.dishes.errMess}\r\n          comments={this.props.comments.comments.filter((comment) => comment.dish === match.params.dishId)}\r\n          commentsErrMess={this.props.comments.errMess}\r\n          postComment={this.props.postComment}\r\n          favorite={false}\r\n          postFavorite={this.props.postFavorite}\r\n          />\r\n      );\r\n    }\r\n\r\n    const PrivateRoute = ({ component: Component, ...rest }) => (\r\n      <Route {...rest} render={(props) => (\r\n        this.props.auth.isAuthenticated\r\n          ? <Component {...props} />\r\n          : <Redirect to={{\r\n              pathname: '/home',\r\n              state: { from: props.location }\r\n            }} />\r\n      )} />\r\n    );\r\n\r\n    return (\r\n      <div>\r\n        <Header auth={this.props.auth} \r\n          loginUser={this.props.loginUser} \r\n          logoutUser={this.props.logoutUser} \r\n          />   \r\n        <TransitionGroup>\r\n          <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\r\n            <Switch>\r\n              <Route path=\"/home\" component={HomePage} />\r\n              <Route exact path='/aboutus' component={() => <About leaders={this.props.leaders} />} />} />\r\n              <Route exact path=\"/menu\" component={() => <Menu dishes={this.props.dishes} />} />\r\n              <Route path=\"/menu/:dishId\" component={DishWithId} />\r\n              <PrivateRoute exact path=\"/favorites\" component={() => <Favorites favorites={this.props.favorites} deleteFavorite={this.props.deleteFavorite} />} />\r\n              <Route exact path=\"/contactus\" component={() => <Contact resetFeedbackForm={this.props.resetFeedbackForm} postFeedback={this.props.postFeedback} />} />\r\n              <Redirect to=\"/home\" />\r\n            </Switch>\r\n          </CSSTransition>\r\n        </TransitionGroup>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\r\n","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Dishes = (state = {\r\n        isLoading: true,\r\n        errMess: null,\r\n        dishes: []\r\n    }, action) => {\r\n    switch(action.type) {\r\n        case ActionTypes.ADD_DISHES:\r\n            return {...state, isLoading: false, errMess: null, dishes: action.payload};\r\n\r\n        case ActionTypes.DISHES_LOADING:\r\n            return {...state, isLoading: true, errMess: null, dishes: []};\r\n\r\n        case ActionTypes.DISHES_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload, dishes: []};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Comments = (state = {\r\n        errMess: null,\r\n        comments: []\r\n    }, action) => {\r\n    switch(action.type) {\r\n        case ActionTypes.ADD_COMMENTS:\r\n            return {...state, isLoading: false, errMess: null, comments: action.payload};\r\n\r\n        case ActionTypes.COMMENTS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload, comments: []};\r\n\r\n        case ActionTypes.ADD_COMMENT:\r\n            var comment = action.payload;\r\n            return {...state, comments: state.comments.concat(comment)};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Promotions = (state = {\r\n        isLoading: true,\r\n        errMess: null,\r\n        promotions: []\r\n    }, action) => {\r\n    switch(action.type) {\r\n        case ActionTypes.ADD_PROMOS:\r\n            return {...state, isLoading: false, errMess: null, promotions: action.payload};\r\n\r\n        case ActionTypes.PROMOS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, promotions: []};\r\n\r\n        case ActionTypes.PROMOS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload, promotions: []};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Leaders = (state  = { isLoading: true,\r\n                                    errMess: null,\r\n                                    leaders:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_LEADERS:\r\n        return {...state, isLoading: false, errMess: null, leaders: action.payload};\r\n\r\n        case ActionTypes.LEADERS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, leaders: []}\r\n\r\n        case ActionTypes.LEADERS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n          return state;\r\n    }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const favorites = (state = {\r\n        isLoading: true,\r\n        errMess: null,\r\n        favorites: null\r\n    }, action) => {\r\n    switch(action.type) {\r\n        case ActionTypes.ADD_FAVORITES:\r\n            return {...state, isLoading: false, errMess: null, favorites: action.payload};\r\n\r\n        case ActionTypes.FAVORITES_LOADING:\r\n            return {...state, isLoading: true, errMess: null, favorites: null};\r\n\r\n        case ActionTypes.FAVORITES_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload, favorites: null};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as ActionTypes from './ActionTypes';\r\n\r\n// The auth reducer. The starting state sets authentication\r\n// based on a token being in local storage. In a real app,\r\n// we would also want a util to check if the token is expired.\r\nexport const Auth = (state = {\r\n        isLoading: false,\r\n        isAuthenticated: localStorage.getItem('token') ? true : false,\r\n        token: localStorage.getItem('token'),\r\n        user: localStorage.getItem('creds') ? JSON.parse(localStorage.getItem('creds')) : null,\r\n        errMess: null\r\n    }, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.LOGIN_REQUEST:\r\n            return {...state,\r\n                isLoading: true,\r\n                isAuthenticated: false,\r\n                user: action.creds\r\n            };\r\n        case ActionTypes.LOGIN_SUCCESS:\r\n            return {...state,\r\n                isLoading: false,\r\n                isAuthenticated: true,\r\n                errMess: '',\r\n                token: action.token\r\n            };\r\n        case ActionTypes.LOGIN_FAILURE:\r\n            return {...state,\r\n                isLoading: false,\r\n                isAuthenticated: false,\r\n                errMess: action.message\r\n            };\r\n        case ActionTypes.LOGOUT_REQUEST:\r\n            return {...state,\r\n                isLoading: true,\r\n                isAuthenticated: true\r\n            };\r\n        case ActionTypes.LOGOUT_SUCCESS:\r\n            return {...state,\r\n                isLoading: false,\r\n                isAuthenticated: false,\r\n                token: '',\r\n                user: null\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n}","export const InitialFeedback = {\r\n    firstname: '',\r\n    lastname: '',\r\n    telnum: '',\r\n    email: '',\r\n    agree: false,\r\n    contactType: 'Tel.',\r\n    message: ''\r\n}","import React, { Component } from 'react';\r\nimport Main from './components/MainComponent';\r\nimport './App.css';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { ConfigureStore } from './redux/configureStore';\r\n\r\nconst store = ConfigureStore();\r\n\r\nclass App extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n        <BrowserRouter>\r\n          <div>\r\n            <Main />\r\n          </div>\r\n        </BrowserRouter>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { createForms } from 'react-redux-form';\r\nimport { Dishes } from './dishes';\r\nimport { Comments } from './comments';\r\nimport { Promotions } from './promotions';\r\nimport { Leaders } from './leaders';\r\nimport { favorites } from './favorites';\r\nimport { Auth } from './auth';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport { InitialFeedback } from './forms';\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            dishes: Dishes,\r\n            comments: Comments,\r\n            promotions: Promotions,\r\n            leaders: Leaders,\r\n            auth: Auth,\r\n            favorites,\r\n            ...createForms({\r\n                feedback: InitialFeedback\r\n            })\r\n        }),\r\n        applyMiddleware(thunk, logger)\r\n    );\r\n\r\n    return store;\r\n}","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport 'bootstrap-social/bootstrap-social.css';\r\nimport './index.css';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}